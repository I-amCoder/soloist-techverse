@model AspnetCoreMvcFull.Models.ViewModels.HomePageViewModel
@{
    Layout = "_BlankLayout";
    ViewData["Title"] = "Welcome to Campus Compass";
}

<style>
    .hero-section {
        position: relative;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: #fff;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
        min-height: 80vh;
        display: flex;
        align-items: center;
    }

    .hero-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.4);
        z-index: 1;
    }

    .hero-content {
        position: relative;
        z-index: 2;
        text-align: center;
    }

    .action-btn {
        display: inline-block;
        padding: 15px 30px;
        margin: 10px;
        border-radius: 50px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }

    .btn-lost {
        background: linear-gradient(45deg, #e74c3c, #c0392b);
        color: white;
        box-shadow: 0 4px 15px rgba(231, 76, 60, 0.4);
    }

    .btn-lost:hover {
        background: linear-gradient(45deg, #c0392b, #a93226);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(231, 76, 60, 0.6);
        color: white;
    }

    .btn-found {
        background: linear-gradient(45deg, #27ae60, #2ecc71);
        color: white;
        box-shadow: 0 4px 15px rgba(46, 204, 113, 0.4);
    }

    .btn-found:hover {
        background: linear-gradient(45deg, #229954, #27ae60);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(46, 204, 113, 0.6);
        color: white;
    }

    .btn-browse {
        background: linear-gradient(45deg, #3498db, #2980b9);
        color: white;
        box-shadow: 0 4px 15px rgba(52, 152, 219, 0.4);
    }

    .btn-browse:hover {
        background: linear-gradient(45deg, #2980b9, #21618c);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(52, 152, 219, 0.6);
        color: white;
    }

    .stats-card {
        background: white;
        border-radius: 15px;
        padding: 25px;
        text-align: center;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
        border: none;
    }

    .stats-card:hover {
        transform: translateY(-5px);
    }

    .stats-number {
        font-size: 2.5rem;
        font-weight: bold;
        color: #495057;
    }

    .stats-label {
        color: #6c757d;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .item-card {
        border: none;
        border-radius: 15px;
        overflow: hidden;
        transition: all 0.3s ease;
        height: 100%;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
    }

    .item-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    }

    .item-card .card-body {
        padding: 20px;
    }

    .item-image {
        height: 200px;
        object-fit: cover;
        background: linear-gradient(45deg, #f8f9fa, #e9ecef);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3rem;
        color: #adb5bd;
    }

    .category-tag {
        display: inline-block;
        padding: 4px 12px;
        background: #e9ecef;
        border-radius: 20px;
        font-size: 0.8rem;
        color: #495057;
        margin-bottom: 10px;
    }

    .user-welcome {
        background: linear-gradient(45deg, #51cf66, #40c057);
        color: white;
        padding: 15px 25px;
        border-radius: 10px;
        margin-bottom: 20px;
    }

    .auth-links {
        position: absolute;
        top: 20px;
        right: 20px;
        z-index: 3;
    }

    .auth-btn {
        padding: 8px 20px;
        margin-left: 10px;
        border-radius: 25px;
        background: rgba(255, 255, 255, 0.2);
        color: white;
        text-decoration: none;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        transition: all 0.3s ease;
    }

    .auth-btn:hover {
        background: rgba(255, 255, 255, 0.3);
        color: white;
        text-decoration: none;
    }

    .section-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #2d3436;
        margin-bottom: 20px;
        text-align: center;
    }

    .section-subtitle {
        color: #636e72;
        text-align: center;
        margin-bottom: 50px;
        font-size: 1.1rem;
    }

    .success-story {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 10px;
        border-left: 4px solid #51cf66;
        margin-bottom: 20px;
    }
</style>

<!-- Hero Section -->
<div class="hero-section"
    style="background: url('/img/backgrounds/umt.jpg') no-repeat center center; background-size: cover;">
    <div class="hero-overlay"></div>

    <!-- Auth Links (if not logged in) -->
    @if (!Model.IsUserLoggedIn)
    {
        <div class="auth-links">
            <a asp-area="Identity" asp-page="/Account/Login" class="auth-btn">
                <i class="bx bx-log-in me-1"></i>Login
            </a>
            <a asp-area="Identity" asp-page="/Account/Register" class="auth-btn">
                <i class="bx bx-user-plus me-1"></i>Sign Up
            </a>
        </div>
    }

    <div class="container hero-content">
        <div class="row">
            <div class="col-lg-8 mx-auto text-center">
                <!-- User Welcome (if logged in) -->
                @if (Model.IsUserLoggedIn)
                {
                    <div class="user-welcome text-center mb-4">
                        <h4 class="mb-2">
                            <i class="bx bx-user-circle me-2"></i>Welcome back, @Model.UserName!
                        </h4>
                        <div class="row text-center">
                            <div class="col-4">
                                <strong>@Model.UserItemsCount</strong><br>
                                <small>Your Items</small>
                            </div>
                            <div class="col-4">
                                <strong>@Model.UserClaimsCount</strong><br>
                                <small>Your Claims</small>
                            </div>
                            <div class="col-4">
                                <a asp-controller="Dashboard" asp-action="Index" class="text-white">
                                    <strong>Dashboard</strong><br>
                                    <small>View All</small>
                                </a>
                            </div>
                        </div>
                    </div>
                }

                <h1 class="display-3 mb-4">Campus Compass</h1>
                <p class="lead mb-5">Your gateway to reuniting lost items with their owners at UMT Lahore</p>

                <!-- Action Buttons -->
                <div class="text-center mb-5">
                    <a asp-controller="Items" asp-action="PostLost" class="action-btn btn-lost">
                        <i class="bx bx-search me-2"></i>I Lost Something
                    </a>
                    <a asp-controller="Items" asp-action="PostFound" class="action-btn btn-found">
                        <i class="bx bx-check-circle me-2"></i>I Found Something
                    </a>
                    <a asp-controller="Items" asp-action="Index" class="action-btn btn-browse">
                        <i class="bx bx-list-ul me-2"></i>Browse Items
                    </a>
                </div>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="row mt-5">
            <div class="col-md-3 mb-4">
                <div class="stats-card">
                    <div class="stats-number text-primary">@Model.TotalItemsReported</div>
                    <div class="stats-label">Items Reported</div>
                </div>
            </div>
            <div class="col-md-3 mb-4">
                <div class="stats-card">
                    <div class="stats-number text-success">@Model.TotalItemsReturned</div>
                    <div class="stats-label">Items Returned</div>
                </div>
            </div>
            <div class="col-md-3 mb-4">
                <div class="stats-card">
                    <div class="stats-number text-info">@Model.ActiveUsers</div>
                    <div class="stats-label">Active Users</div>
                </div>
            </div>
            <div class="col-md-3 mb-4">
                <div class="stats-card">
                    <div class="stats-number text-warning">@((Model.TotalItemsReported > 0 ?
                                                (double)Model.TotalItemsReturned / Model.TotalItemsReported * 100 : 0).ToString("F0"))%</div>
                    <div class="stats-label">Success Rate</div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Recent Items Section -->
<div class="container my-5">
    <h2 class="section-title">Recent Lost & Found Items</h2>
    <p class="section-subtitle">Help reunite these items with their owners</p>

    <div class="row">
        @foreach (var item in Model.RecentItems.Take(8))
        {
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                <div class="card item-card">
                    @if (!string.IsNullOrEmpty(item.ImagePath))
                    {
                        <img src="@item.ImagePath" class="card-img-top item-image" alt="@item.Name">
                    }
                    else
                    {
                        <div class="item-image">
                            <i class="bx bx-package"></i>
                        </div>
                    }
                    <div class="card-body">
                        <span class="category-tag">@item.Category</span>
                        <h6 class="card-title text-truncate">@item.Name</h6>
                        <p class="card-text text-muted small mb-2">@(item.Description.Length > 60 ?
                                                    item.Description.Substring(0, 60) + "..." : item.Description)</p>
                    <div class="d-flex justify-content-between align-items-center">
                        <small class="text-muted">
                            <i class="bx bx-map-pin me-1"></i>@item.Location
                        </small>
                        <span class="badge bg-@(item.Type == ItemType.Lost ? "danger" : "success")">
                            @item.Type
                        </span>
                    </div>
                    <div class="mt-3">
                        <a href="@Url.Action("Preview", "Home", new { id = item.Id })"
                            class="btn btn-outline-primary btn-sm w-100">
                            <i class="bx bx-show me-1"></i>View Details
                        </a>
                    </div>
                </div>
            </div>
        </div>
                }
    </div>

    <div class="text-center mt-4">
        <a asp-controller="Items" asp-action="Index" class="btn btn-primary btn-lg">
            <i class="bx bx-list-ul me-2"></i>View All Items
        </a>
    </div>
</div>

<!-- How It Works Section -->
<div class="bg-light py-5">
    <div class="container">
        <h2 class="section-title">How It Works</h2>
        <div class="row">
            <div class="col-md-4 text-center mb-4">
                <div class="mb-3">
                    <i class="bx bx-plus-circle display-1 text-primary"></i>
                </div>
                <h5>1. Report Item</h5>
                <p class="text-muted">Post details about your lost or found item with photos and location</p>
            </div>
            <div class="col-md-4 text-center mb-4">
                <div class="mb-3">
                    <i class="bx bx-search display-1 text-success"></i>
                </div>
                <h5>2. Search & Connect</h5>
                <p class="text-muted">Browse items or get notified when someone finds your lost item</p>
            </div>
            <div class="col-md-4 text-center mb-4">
                <div class="mb-3">
                    <i class="bx bx-check-circle display-1 text-warning"></i>
                </div>
                <h5>3. Reunite</h5>
                <p class="text-muted">Coordinate with the finder/owner to safely return the item</p>
            </div>
        </div>
    </div>
</div>

<!-- Success Stories Section -->
@if (Model.RecentSuccessStories.Any())
{
    <div class="container my-5">
        <h2 class="section-title">Recent Success Stories</h2>
        <p class="section-subtitle">Happy reunions that happened recently</p>

        <div class="row">
            @foreach (var story in Model.RecentSuccessStories)
            {
                <div class="col-md-4 mb-3">
                    <div class="success-story">
                        <h6 class="text-success mb-2">
                            <i class="bx bx-check-circle me-2"></i>Item Returned!
                        </h6>
                        <p class="mb-2"><strong>@story.ItemName</strong></p>
                        <small class="text-muted">
                            Returned to @story.OwnerName • @story.ResolvedDate.ToString("MMM dd")
                        </small>
                    </div>
                </div>
            }
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
    <script>
        // SignalR connection for real-time updates
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/itemHub")
            .build();

        connection.on("ReceiveNewItemNotification", function (itemType, itemName) {
            // Create attractive toast notification
            const toast = document.createElement('div');
            toast.style.cssText = `
                        position: fixed;
                        top: 20px;
                        right: 20px;
                        background: linear-gradient(45deg, #51cf66, #40c057);
                        color: white;
                        padding: 15px 20px;
                        border-radius: 10px;
                        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
                        z-index: 9999;
                        animation: slideInRight 0.3s ease;
                    `;

            toast.innerHTML = `
                        <div style="display: flex; align-items: center;">
                            <i class="bx bx-check-circle me-2"></i>
                            <div>
                                <strong>New ${itemType} Item!</strong><br>
                                <small>${itemName} has been reported</small>
                            </div>
                            <button onclick="this.parentElement.parentElement.remove()" style="background: none; border: none; color: white; margin-left: 10px;">×</button>
                        </div>
                    `;

            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 5000);
        });

        connection.start().catch(err => console.error(err.toString()));

        // Add CSS animation
        const style = document.createElement('style');
        style.textContent = `
                    @@keyframes slideInRight {
                        from { transform: translateX(100%); opacity: 0; }
                        to { transform: translateX(0); opacity: 1; }
                    }
                `;
        document.head.appendChild(style);
    </script>
}
